{"version":3,"sources":["components/Webchat.js","components/QrCodeReader.js","components/App.js","serviceWorker.js","index.js"],"names":["props","directLine","DirectLine","token","id","className","v-show","click","v-if","React","Component","state","delay","result","handleScan","bind","data","this","setState","err","console","error","style","height","width","onError","handleError","onScan","url","name","wrap","Pink","children","color","Yellow","Lightblue","Green","Blue","Gray","ref","parallax","pages","scrolling","Layer","offset","speed","factor","backgroundImage","backgroundSize","backgroundColor","pointerEvents","alt","src","marginLeft","opacity","display","alignItems","justifyContent","backgroundPosition","onClick","scrollTo","whiteSpace","fontFamily","fontSize","lineHeight","transform","scale","animation","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a248bf6.chunk.js","sourcesContent":["import { DirectLine } from 'botframework-directlinejs';\r\nimport React from 'react';\r\nimport ReactWebChat from 'botframework-webchat';\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.directLine = new DirectLine({ token: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chat\">\r\n                <div className=\"box-chat\" v-show=\"chatVisible\">\r\n                    <p>Liz</p>\r\n                    <button className=\"btn-close\" click=\"openChat\">\r\n                        <span className=\"icon icon-fechar\"></span>\r\n                    </button>\r\n                    {false && <ReactWebChat directLine={this.directLine} userID='teste' />}\r\n                </div>\r\n                <button click=\"openChat\" className=\"btn-chat btn-cs\">\r\n                    <span className=\"icon icon-conversa\" v-if=\"!chatVisible\"></span>\r\n                    <span className=\"icon icon-fechar\" v-if=\"chatVisible\"></span>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\n \r\nexport default class extends React.Component {\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      delay: 100,\r\n      result: 'No result',\r\n    }\r\n \r\n    this.handleScan = this.handleScan.bind(this)\r\n  }\r\n  handleScan(data){\r\n    this.setState({\r\n      result: data,\r\n    })\r\n  }\r\n  handleError(err){\r\n    console.error(err)\r\n  }\r\n  render(){\r\n    const previewStyle = {\r\n      height: 240,\r\n      width: 320,\r\n    }\r\n \r\n    return(\r\n      <div>\r\n        <QrReader\r\n          delay={this.state.delay}\r\n          style={previewStyle}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          />\r\n        <p>{this.state.result}</p>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Parallax from 'react-springy-parallax';\r\nimport Webchat from './Webchat';\r\nimport ReactPlayer from 'react-player'\r\nimport QrCodeReader from './QrCodeReader'\r\n\r\n\r\n\r\n\r\n\r\n// Little helpers ...\r\nconst url = (name, wrap = false) => `${wrap ? 'url(' : ''}assets/${name}.svg${wrap ? ')' : ''}`\r\nconst Pink = ({ children }) => <span style={{ color: '#FF6AC1' }}>{children}</span>\r\nconst Yellow = ({ children }) => <span style={{ color: '#EFF59B' }}>{children}</span>\r\nconst Lightblue = ({ children }) => <span style={{ color: '#9AEDFE' }}>{children}</span>\r\nconst Green = ({ children }) => <span style={{ color: '#57EE89' }}>{children}</span>\r\nconst Blue = ({ children }) => <span style={{ color: '#57C7FF' }}>{children}</span>\r\nconst Gray = ({ children }) => <span style={{ color: '#909090' }}>{children}</span>\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Parallax\r\n                ref={ref => this.parallax = ref}\r\n                pages={4}\r\n                scrolling={false}>\r\n\r\n\r\n\r\n                <Parallax.Layer\r\n                    offset={0} speed={0} factor={4}\r\n                    style={{ backgroundImage: url('stars', true), backgroundSize: 'cover' }}\r\n                />\r\n\r\n                <Parallax.Layer offset={1} speed={1} style={{ backgroundColor: '#243B4A' }} />\r\n                <Parallax.Layer offset={2} speed={1} style={{ backgroundColor: '#805E73' }} />\r\n                <Parallax.Layer offset={3} speed={1} style={{ backgroundColor: '#87BCDE' }} />\r\n\r\n                <Parallax.Layer offset={1.3} speed={-0.3} style={{ pointerEvents: 'none' }}>\r\n                    <img alt=\"\" src={url('satellite4')} style={{ width: '15%', marginLeft: '70%' }} />\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer offset={1} speed={0.8} style={{ opacity: 0.1 }}>\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer offset={2} speed={0.2} style={{ opacity: 0.2 }}>\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '10%' }} />\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '75%' }} />\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer offset={2.6} speed={-0.1} style={{ opacity: 0.4 }}>\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '25%', marginLeft: '30%' }} />\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '10%', marginLeft: '80%' }} />\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer offset={3.6} speed={0.4} style={{ opacity: 0.6 }}>\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\r\n                    <img alt=\"\" src={url('cloud')} style={{ display: 'block', width: '15%', marginLeft: '75%' }} />\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer\r\n                    offset={3.5} speed={-0.4}\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\r\n                    <img alt=\"\" src={url('earth')} style={{ width: '60%' }} />\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer\r\n                    offset={3} speed={-0.3}\r\n                    style={{\r\n                        backgroundSize: '80%',\r\n                        backgroundPosition: 'center',\r\n                        backgroundImage: url('clients', true)\r\n                    }}\r\n                />\r\n\r\n                <Parallax.Layer\r\n                    offset={0} speed={0.5}\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                    onClick={() => this.parallax.scrollTo(1)}>\r\n                    <div\r\n                        style={{\r\n                            whiteSpace: 'pre',\r\n                            fontFamily: 'Menlo-Regular, Menlo, monospace',\r\n                            fontSize: 14,\r\n                            lineHeight: '10px',\r\n                            color: 'white'\r\n                        }}>\r\n                        <p><Gray> &gt;</Gray>  npm install awv3-node --save</p>\r\n                        <br />\r\n                        <p><Gray> 1</Gray>  <Pink>const</Pink> Server <Pink>=</Pink> <Lightblue>require</Lightblue><Gray>(</Gray><Green>'awv3-node/server'</Green><Gray>)</Gray></p>\r\n                        <br />\r\n                        <p><Gray> 2</Gray>  <Pink>new</Pink> Server<Gray>(&#123;</Gray></p>\r\n                        <p><Gray> 3</Gray>      <Yellow>output</Yellow><Pink>:</Pink> __dirname <Pink>+</Pink></p>\r\n                        <p>            <Green>'/node_modules/@awv/classcad_cadapplication'</Green><Gray>,</Gray></p>\r\n                        <p><Gray> 4</Gray>      <Yellow>config</Yellow><Pink>:</Pink> <Green>'CADApplication.ini'</Green><Gray>,</Gray></p>\r\n                        <p><Gray> 5</Gray>      <Yellow>publicport</Yellow><Pink>:</Pink> <Blue>process</Blue>.<Blue>env</Blue>.<Blue>port</Blue> <Pink>||</Pink>&nbsp;8181<Gray>,</Gray></p>\r\n                        <p><Gray> 6</Gray>      <Yellow>privateport</Yellow><Pink>:</Pink> 9191<Gray>,</Gray></p>\r\n                        <p><Gray> 7</Gray>      <Yellow>instances</Yellow><Pink>:</Pink> 3</p>\r\n                        <p><Gray> 8</Gray>  <Gray>})</Gray><Pink>.</Pink><Lightblue>start</Lightblue><Gray>()</Gray></p>\r\n                    </div>\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer\r\n                    offset={1} speed={0}\r\n                    onClick={() => this.parallax.scrollTo(2)}\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <div className='player-wrapper'>\r\n                        <ReactPlayer\r\n                            className='react-player'\r\n                            url='https://www.youtube.com/watch?v=ysz5S6PUM-U'\r\n                            width='100%'\r\n                            height='100%'\r\n                            />\r\n                    </div>\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer\r\n                    offset={2} speed={0}\r\n                    onClick={() => this.parallax.scrollTo(3)}\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <img alt=\"\"\r\n                        src={url('qr-youtube-com')}\r\n                        style={{ width: '20%', transform: [{ scale: this.animation }] }}\r\n                    />\r\n                </Parallax.Layer>\r\n\r\n                <Parallax.Layer\r\n                    offset={3} speed={-0}\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                    onClick={() => this.parallax.scrollTo(0)}>\r\n                    <QrCodeReader />\r\n                </Parallax.Layer>\r\n            </Parallax>\r\n            <Webchat />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}